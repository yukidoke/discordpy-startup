from discord.ext import commands
import random
import shelve

# コグとして用いるクラスを定義。
class Damage(commands.Cog):

    # TestCogクラスのコンストラクタ。Botを受取り、インスタンス変数として保持。
    def __init__(self, bot):
        self.bot = bot

    damage_table = [
        [-7,0,-1,0,0,0,1,2,2,3,3,4,4],[-7,1,-1,0,0,0,1,2,3,3,3,4,4],[-7,2,-1,0,0,0,1,2,3,4,4,4,4],[-7,3,-1,0,0,1,1,2,3,4,4,4,5],[-7,4,-1,0,0,1,2,2,3,4,4,5,5],
        [-7,5,-1,0,1,1,2,2,3,4,5,5,5],[-7,6,-1,0,1,1,2,3,3,4,5,5,5],[-7,7,-1,0,1,1,2,3,4,4,5,5,6],[-7,8,-1,0,1,2,2,3,4,4,5,6,6],[-7,9,-1,0,1,2,3,3,4,4,5,6,7],
        [-7,10,-1,1,1,2,3,3,4,5,5,6,7],[-7,11,-1,1,2,2,3,3,4,5,6,6,7],[-7,12,-1,1,2,2,3,4,4,5,6,6,7],[-7,13,-1,1,2,3,3,4,4,5,6,7,7],[-7,14,-1,1,2,3,4,4,4,5,6,7,8],
        [-7,15,-1,1,2,3,4,4,5,5,6,7,8],[-7,16,-1,1,2,3,4,4,5,6,7,7,8],[-7,17,-1,1,2,3,4,5,5,6,7,7,8],[-7,18,-1,1,2,3,4,5,6,6,7,7,8],[-7,19,-1,1,2,3,4,5,6,7,7,8,9],
        [-7,20,-1,1,2,3,4,5,6,7,8,9,10],[-7,21,-1,1,2,3,4,6,6,7,8,9,10],[-7,22,-1,1,2,3,5,6,6,7,8,9,10],[-7,23,-1,2,2,3,5,6,7,7,8,9,10],[-7,24,-1,2,3,4,5,6,7,7,8,9,10],
        [-7,25,-1,2,3,4,5,6,7,8,8,9,10],[-7,26,-1,2,3,4,5,6,8,8,9,9,10],[-7,27,-1,2,3,4,6,6,8,8,9,9,10],[-7,28,-1,2,3,4,6,6,8,9,9,10,10],[-7,29,-1,2,3,4,6,7,8,9,9,10,10],
        [-7,30,-1,2,4,4,6,7,8,9,10,10,10],[-7,31,-1,2,4,5,6,7,8,9,10,10,11],[-7,32,-1,3,4,5,6,7,8,10,10,10,11],[-7,33,-1,3,4,5,6,8,8,10,10,10,11],[-7,34,-1,3,4,5,6,8,9,10,10,11,11],
        [-7,35,-1,3,4,5,7,8,9,10,10,11,12],[-7,36,-1,3,5,5,7,8,9,10,11,11,12],[-7,37,-1,3,5,6,7,8,9,10,11,12,12],[-7,38,-1,3,5,6,7,8,10,10,11,12,13],[-7,39,-1,4,5,6,7,8,10,11,11,12,13],
        [-7,40,-1,4,5,6,7,9,10,11,11,12,13],[-7,41,-1,4,6,6,7,9,10,11,12,12,13],[-7,42,-1,4,6,7,7,9,10,11,12,13,13],[-7,43,-1,4,6,7,8,9,10,11,12,13,14],[-7,44,-1,4,6,7,8,10,10,11,12,13,14],
        [-7,45,-1,4,6,7,9,10,10,11,12,13,14],[-7,46,-1,4,6,7,9,10,10,12,13,13,14],[-7,47,-1,4,6,7,9,10,11,12,13,13,15],[-7,48,-1,4,6,7,9,10,12,12,13,13,15],[-7,49,-1,4,6,7,10,10,12,12,13,14,15],
        [-7,50,-1,4,6,8,10,10,12,12,13,15,15],[-7,51,-1,5,7,8,10,10,12,12,13,15,15],[-7,52,-1,5,7,8,10,11,12,12,13,15,15],[-7,53,-1,5,7,9,10,11,12,12,14,15,15],[-7,54,-1,5,7,9,10,11,12,13,14,15,16],
        [-7,55,-1,5,7,10,10,11,12,13,14,16,16],[-7,56,-1,5,8,10,11,12,12,13,15,16,17],[-7,57,-1,5,8,10,11,11,12,13,15,16,17],[-7,58,-1,5,8,10,11,12,12,13,15,16,17],[-7,59,-1,5,9,10,11,12,12,14,15,16,17],
        [-7,60,-1,5,9,10,11,12,13,14,15,16,18],[-7,61,-1,5,9,10,11,12,13,14,16,17,18],[-7,62,-1,5,9,10,11,13,13,14,16,17,18],[-7,63,-1,5,9,10,11,13,13,15,17,17,18],[-7,64,-1,5,9,10,11,13,14,15,17,17,18],
        [-7,65,-1,5,9,10,12,13,14,15,17,18,18],[-7,66,-1,5,9,10,12,13,15,15,17,18,19],[-7,67,-1,5,9,10,12,13,15,16,17,18,19],[-7,68,-1,5,9,10,12,14,15,16,17,19,19],[-7,69,-1,5,9,10,12,14,16,17,18,19,19],
        [-7,70,-1,5,9,10,13,14,16,17,18,19,20],[-7,71,-1,5,9,10,13,15,16,17,18,19,20],[-7,72,-1,5,9,10,13,15,16,17,18,19,20],[-7,73,-1,5,9,10,13,15,16,17,19,20,21],[-7,74,-1,6,9,10,13,15,16,18,19,20,21],
        [-7,75,-1,6,9,10,13,16,16,18,19,20,21],[-7,76,-1,6,9,10,13,16,17,18,19,20,21],[-7,77,-1,6,9,10,13,16,17,18,20,21,22],[-7,78,-1,6,9,10,13,16,17,19,20,22,23],[-7,79,-1,6,9,10,13,16,18,19,20,22,23],
        [-7,80,-1,6,9,10,13,16,18,20,21,22,23],[-7,81,-1,6,9,10,13,17,18,20,21,22,23],[-7,82,-1,6,9,10,14,17,18,20,21,22,24],[-7,83,-1,6,9,11,14,17,18,20,21,23,24],[-7,84,-1,6,9,11,14,17,19,20,21,23,24],
        [-7,85,-1,6,9,11,14,17,19,21,22,23,24],[-7,86,-1,7,10,11,14,17,19,21,22,23,25],[-7,87,-1,7,10,12,14,17,19,21,22,24,25],[-7,88,-1,7,10,12,14,18,19,21,22,24,25],[-7,89,-1,7,10,12,15,18,19,21,22,24,26],
        [-7,90,-1,7,10,12,15,18,19,21,23,25,26],[-7,91,-1,7,11,13,15,18,19,21,23,25,26],[-7,92,-1,7,11,13,15,18,20,21,23,25,27],[-7,93,-1,8,11,13,15,18,20,22,23,25,27],[-7,94,-1,8,11,13,16,18,20,22,23,25,28],
        [-7,95,-1,8,11,14,16,18,20,22,23,26,28],[-7,96,-1,8,11,14,16,19,20,22,23,26,28],[-7,97,-1,8,12,14,16,19,20,22,24,26,28],[-7,98,-1,8,12,15,16,19,20,22,24,27,28],[-7,99,-1,8,12,15,17,19,20,22,24,27,29],
        [-7,100,-1,8,12,15,18,19,20,22,24,27,30]
        ]

    #ダメージ計算
    @commands.command()
    async def dmg(self, ctx, arg1 = 'dflt', arg2 = 'dflt', arg3 = 'dflt'):
        pips = [random.randint(1, 6) for _ in range(2)]
        sum_pips = sum(pips)
        if arg1.isdecimal() and arg2.isdecimal() and arg3 != 'dflt':
            fixed_pips = sum_pips + int(arg2)
            if fixed_pips >= 13:
                fixed_pips = 12
            else:
                pass
            if sum_pips == 2:
                await ctx.send(f'「{arg3}」 {pips} = {sum_pips} fumble...')
            else:
                damage = damage_table[int(arg1)][fixed_pips]
                await ctx.send(f'「{arg3}」 {pips} = {sum_pips} 出目補正+{arg2} 威力表{arg1}で「{damage}」点のダメージ')
        elif arg1.isdecimal() and arg2.isdecimal() and arg3 == 'dflt':
            fixed_pips = sum_pips + int(arg2)
            if fixed_pips >= 13:
                fixed_pips = 12
            else:
                pass
            if sum_pips == 2:
                await ctx.send(f'{pips} = {sum_pips} fumble...')
            else:
                damage = damage_table[int(arg1)][fixed_pips]
                await ctx.send(f'{pips} = {sum_pips} 出目補正+{arg2} 威力表{arg1}で「{damage}」点のダメージ')
        elif arg1.isdecimal() and arg2 != 'dflt' and arg3 == 'dflt':
            if sum_pips == 2:
                await ctx.send(f'「{arg2}」 {pips} = {sum_pips} fumble...')
            else:
                damage = damage_table[int(arg1)][sum_pips]
                await ctx.send(f'「{arg2}」 {pips} = {sum_pips} 威力表{arg1}で「{damage}」点のダメージ')
        elif arg1.isdecimal() and arg2 == 'dflt' and arg3 == 'dflt':
            if sum_pips == 2:
                await ctx.send(f'{pips} = {sum_pips} fumble...')
            else:
                damage = damage_table[int(arg1)][sum_pips]
                await ctx.send(f'{pips} = {sum_pips} 威力表{arg1}で「{damage}」点のダメージ')
        else:
            await ctx.send('ERROR:威力が適切に入力されていません')

    #行使判定
    @commands.command()
    async def mp(self, ctx, arg='dflt'):
        if arg.isdecimal():
            pips = [random.randint(1, 6) for _ in range(2)]
            sum_pips = sum(pips)
            if sum_pips == 2:
                await ctx.send(f'行使判定：{pips} = {sum_pips} fumble...')
            else:
                await ctx.send(f'行使判定：{pips} = {sum_pips} 行使成功')
                pips2 = [random.randint(1, 6) for _2 in range(2)]
                sum_pips2 = sum(pips2)
                if sum_pips == 2:
                    await ctx.send(f'{pips2} = {sum_pips2} fumble...')
                else:
                    chara = shelve.open('character.db')
                    dict = chara[str(ctx.author.id)]
                    chara.close()
                    damage = damage_table[int(arg)][sum_pips]
                    amount = damage + dict['mag']
                    await ctx.send(f'{pips2} = {sum_pips2} 威力表{arg}：「{damage}」点　合計：「{amount}」点')
        else:
            pips = [random.randint(1, 6) for _ in range(2)]
            sum_pips = sum(pips)
            if sum_pips == 2:
                await ctx.send(f'行使判定：{pips} = {sum_pips} fumble...')
            else:
                await ctx.send(f'行使判定：{pips} = {sum_pips} 行使成功')

# Bot本体側からコグを読み込む際に呼び出される関数。
def setup(bot):
    bot.add_cog(Damage(bot))
